require 'rake/clean'

SRC = FileList['*.hs']
CLEAN.include('*~')
CLOBBER.include('*.hi', '*.o', "a.out", "nofrac")
CLOBBER.include("images/*")

task :default => :all

desc "compiles the nofrac executable with GHC"
task :compile do
  ["nofrac.hs"].each do |source|
    sh "ghc -O2 -threaded --make #{source}"
  end
end

desc "compiles and generates all fractals"
task :all => [:setup, :compile] do
  mandelbrots
  julias
  burningships
  newtons
  convert
end

desc "generates mandelbrots"
task :mandelbrots => [:setup, :compile]  do
  mandelbrots
  convert
end

def mandelbrots
  mandelbrot "black", "bw"
  mandelbrot "white", "wb"
  mandelbrot "gray", "gray"
  mandelbrot "red", "red"
  mandelbrot "green", "green"
  mandelbrot "blue", "blue"
  mandelbrot "random", "random"
end

desc "generates julia sets"
task :julias => [:setup, :compile]  do
  julias
  convert
end

def julias
  julia "random-random", "random", "-0.74543+0.11301i"
  julia "golden-random", "random", "-0.6180339887498948482045868343656381+0.0i"
  julia "pruim2-random", "random", "-0.5+#{-1.0 / Math.sqrt(17.0)}i"
  julia "random-green", "green", "-0.74543+0.11301i"
end

desc "generates burning ships"
task :burningships => [:setup, :compile] do
  burningships
  convert
end

def burningships
  ["red", "blue", "green", "random"].each do |color|
    burningship "standard-#{color}", color, "-2.5+2.0i", "1.5+-1.0i"
    burningship "zoom-#{color}", color, "-1.8+0.055i", "-1.7+-0.02i"
    burningship "line-#{color}", color, "-1.67+0.013i", "-1.65+-0.002i"
  end
end

desc "Parallel generation of burning ships"
task :parallel => [:setup, :compile] do
  parallel
  convert
end

desc "generates newton-method fractals"
task :newtons => [:setup, :compile] do
  newtons
  convert
end

def newtons
  newton "standard-random-666", "random", 666
  newton "standard-random-008", "random", 8
  newton "standard-random-042", "random", 42
end

task :quick => [:setup, :compile] do
  sh "nofrac --color green --size 512x384 --upperleft -2.0+1.2i --lowerright 1.2+-1.2i > images/quick.ppm"
  convert
end

gifs = Dir["images/*.ppm"].map { |f| f.gsub("ppm", "gif") }

desc "converts PPM images into GIF"
task :convert => gifs

task :setup do
  sh "mkdir -p images"
end

rule '.gif' => '.ppm' do |t|
  sh "convert #{t.source} #{t.name}"
end

def convert
  Dir["images/*.ppm"].each do |file|
    Rake::Task[file.gsub("ppm", "gif")].invoke
  end
end

def mandelbrot(name, color)
  sh "./nofrac --type mandelbrot --color #{color} --size 512x384 --upperleft -2.0+1.2i --lowerright 1.2+-1.2i > images/mandelbrot-#{name}.ppm"
end

def julia(name, color, c)
  sh "./nofrac --type julia --color #{color} -c #{c} --upperleft -2.0+1.5i --lowerright 2.0+-1.5i > images/julia-#{name}.ppm"
end

def newton(name, color, seed)
  sh "./nofrac --type newton --seed #{seed} --color #{color} --upperleft -2.0+1.5i --lowerright 2.0+-1.5i > images/newton-#{name}.ppm"
end

def burningship(name, color, upperleft, lowerright)
  sh "./nofrac --type burningship --color #{color} --size 1024x768 --upperleft #{upperleft} --lowerright #{lowerright} > images/burningship-#{name}.ppm"
end

def parallel
  [1, 2, 3, 4].each do |procs|
    sh "time ./nofrac +RTS -N#{procs} -RTS --type burningship --color green --size 2048x1536 --upperleft -1.8+0.055i --lowerright -1.7+-0.02i > images/burningship-p#{procs}.ppm"
  end
end
